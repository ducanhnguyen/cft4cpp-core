package com.fit.gui.testreport.object;

import java.util.List;

import com.fit.testdata.object.TestpathString_Marker;
import com.fit.tree.object.IFunctionNode;

/**
 * Represent test path report
 *
 * @author ducanhnguyen
 */
public interface ITestpathReport extends ITestedReport {
	/**
	 * Generate function call
	 *
	 * @return
	 */
	FunctionCallStatement generateFunctionCall();

	/**
	 * Generate unit test function for the current test path
	 *
	 * @param nameTestcase
	 * @return
	 */
	String generateUnitTest(String nameTestcase);

	String getTestdata();

	void setTestdata(String testdata);

	IOutputReport getActualOutput();

	void setActualOutput(IOutputReport actualOutput);

	IOutputReport getExpectedOutput();

	void setExpectedOutput(IOutputReport expectedOutput);

	IFunctionNode getFunctionNode();

	void setFunctionNode(IFunctionNode functionNode);

	IIdentificationForTestPath getIdentification();

	void setIdentification(IIdentificationForTestPath identification);

	IInputReport getInput();

	void setInput(IInputReport input);

	String getPass();

	void setPass(String pass);

	String getNormalizedTestpath();

	void setNormalizedTestpath(String testpath);

	String getShortenTestpath();

	boolean isCanBeExportToUnitTest();

	boolean isStoped();

	void setStoped(boolean isStoped);

	void setRawVariables(List<String> variable);

	void setRawVariables(String variable);

	/**
	 * Get the test path generated by executing function under test
	 *
	 * @return
	 */
	TestpathString_Marker getExecutionTestpath();

	void setExecutionTestpath(TestpathString_Marker executionTestpath);

	String createEXPEC_EQ();

}